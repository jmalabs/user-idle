{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/session-timeout/session-timeout-warning.component.css","webpack:///./src/app/core/session-timeout/session-timeout-warning.component.html","webpack:///./src/app/core/session-timeout/session-timeout-warning.component.ts","webpack:///./src/app/core/session-timeout/session-timeout.service.ts","webpack:///./src/app/shared/material/material.module.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<p><strong>{{sessionTimeoutService.idleState}}</strong></p>\\n<!-- <p *ngIf=\\\"lastPing\\\"><small>Last keepalive ping <strong>{{lastPing | amTimeAgo}}</strong></small></p> -->\\n<button (click)=\\\"sessionTimeoutService.reset()\\\" *ngIf=\\\"sessionTimeoutService.timedOut\\\">Restart</button>\"","import { SessionTimeoutService } from './core/session-timeout/session-timeout.service';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  /**\n   *\n   */\n  constructor(private sessionTimeoutService: SessionTimeoutService) {\n\n    this.sessionTimeoutService.initialize();\n  }\n}\n","import { SharedModule } from './shared/shared.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n// import { NgIdleModule } from '@ng-idle/core';\nimport { UserIdleModule } from 'angular-user-idle';\n\nimport { AppComponent } from './app.component';\nimport { SessionTimeoutWarningComponent } from './core/session-timeout/session-timeout-warning.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SessionTimeoutWarningComponent\n  ],\n  imports: [\n    BrowserModule,\n    SharedModule,\n    UserIdleModule.forRoot({idle: 5, timeout: 5, ping: 5})\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1 mat-dialog-title>Need More Time?</h1>\\n  <div mat-dialog-content>\\n    <div>Your session is about to expire. You will be automatically singed out in:</div>\\n    <div>\\n      <h3>{{countdown}}</h3>\\n    </div>\\n    <div>To continue your session, select Stay Signed In.</div>\\n    <div class=\\\"btn-actions\\\">\\n      <button mat-raised-button color=\\\"primary\\\">Stay Signed In</button>\\n      <button mat-raised-button color=\\\"accent\\\">Sign out</button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-session-timeout-warning',\n  templateUrl: './session-timeout-warning.component.html',\n  styleUrls: ['./session-timeout-warning.component.css']\n})\nexport class SessionTimeoutWarningComponent implements OnInit {\n  countdown: any;\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {\n    this.countdown = this.data.countdown;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// import { DEFAULT_INTERRUPTSOURCES, Idle} from '@ng-idle/core';\nimport { Injectable } from '@angular/core';\n// import { Idle, DEFAULT_INTERRUPTSOURCES };\nimport { MatDialog } from '@angular/material';\nimport { SessionTimeoutWarningComponent } from './session-timeout-warning.component';\nimport { UserIdleService } from 'angular-user-idle';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionTimeoutService {\n  public idleState = 'Not started.';\n  public timedOut = false;\n  constructor(private userIdle: UserIdleService, public dialog: MatDialog) {\n    // constructor(private idle: Idle, public dialog: MatDialog) {\n\n\n  }\n\n\n  public initialize(): void {\n    // Start watching for user inactivity.\n    this.userIdle.startWatching();\n\n    // Start watching when user idle is starting.\n    this.userIdle.onTimerStart().subscribe(count => {\n      this.openWarningDialog(count);\n      console.log('count: ' + count);\n\n    });\n\n    // Start watch when time is up.\n    this.userIdle.onTimeout().subscribe(() => console.log('Time is up!'));\n  }\n\n  public stop() {\n    this.userIdle.stopTimer();\n  }\n\n  public stopWatching() {\n    this.userIdle.stopWatching();\n  }\n\n  public startWatching() {\n    this.userIdle.startWatching();\n  }\n\n  public restart() {\n    this.userIdle.resetTimer();\n  }\n\n  private openWarningDialog(count: any) {\n    const dialogRef = this.dialog.open(SessionTimeoutWarningComponent, {\n      data: {\n        countdown: count\n      }\n    });\n  }\n  // public initialize() {\n  //   this.idle.setIdle(5);\n  //   this.idle.setTimeout(5);\n  //   this.idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\n\n  //   this.idle.onIdleEnd.subscribe(() => this.idleState = 'No longer idle.');\n  //   this.idle.onTimeout.subscribe(() => {\n  //     this.idleState = 'Timed out!';\n  //     this.timedOut = true;\n  //   });\n  //   this.idle.onIdleStart.subscribe(() => this.idleState = 'You\\'ve gone idle!');\n  //   this.idle.onTimeoutWarning.subscribe((countdown) => {\n  //     // this.idleState = 'You will time out in ' + countdown + ' seconds!';\n  //     const dialogRef = this.dialog.open(SessionTimeoutWarningComponent, {\n  //       data: {\n  //         countdown: countdown\n  //       }\n  //     });\n  //   });\n\n  //   this.reset();\n\n  // }\n\n  // public reset() {\n  //   this.idle.watch();\n  //   this.idleState = 'Started.';\n  //   this.timedOut = false;\n  // }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MatButtonModule } from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule\n  ], exports: [\n    MatDialogModule,\n    MatButtonModule\n  ],\n  declarations: []\n})\nexport class MaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from './material/material.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule\n  ],\n  exports: [MaterialModule],\n  declarations: []\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}